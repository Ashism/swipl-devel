################################################################
# This Makefile is created from Makefile.in by the main Prolog
# configuration in .../pl/src/configure.
#
# It can be used to configure and make the add-on packages.  
################################################################
.EXPORT_ALL_VARIABLES:

# Define the packages you wish to build.  Please note that xpce requires
# libXPM and libjpeg to compile.  Note  that   xpce  is  in  front. Some
# packages  install  additional  graphics  support  if  they  find  xpce
# installed.

PKG=	xpce \
	clib \
	cpp \
	odbc \
	table \
	sgml \
	sgml/RDF \
	semweb \
	http \
	chr

# Define additional config options.  If you wish to build the multi-threaded
# version of SWI-Prolog and pl-mt to the same install-base, you must provide
# --enable-mt here.

CNFG=@CNFG@

################################################################
# Normally, all should be fine below here
################################################################

# Values filled from the main SWI-Prolog configure

MAKE=@MAKE@
prefix=@prefix@
exec_prefix=@exec_prefix@
bindir=@bindir@
PL=@PL@@RT@
PLVERSION=@PLVERSION@
PLBASE=$(prefix)/lib/@PL@-$(PLVERSION)
PKGDOC=$(PLBASE)/doc/packages
PLLIBS=@LIBS@
PLARCH=@ARCH@
PLLDFLAGS=@LDFLAGS@
PLINCL=$(shell dirname `pwd`)/include
PLSHARED=@PLSHARED@
INSTALL=@INSTALL@
INSTALL_DATA=@INSTALL_DATA@
SO=@SO@
BUILDDIR=@BUILDDIR@
PLLIB=$(PLBASE)/library

# These programs should use prolog from the (already installed) $(bindir)

PATH=$(bindir):$(shell echo $$PATH)

# How to run configure.  We pass the information required from SWI-Prolog
# in the environment.  All configure scripts in the packages are designed
# to trust the environment if they find $PLINCL.  Otherwise they run Prolog
# to find the required parameters.
#
# BUILDDIR passes the relative location of the directory SWI-Prolog was
# build (i.e. linux, solaris, ...)  This means packages can find information
# on the installed Prolog using ../../$BUILDDIR

CONFIG=	env PL="$(PL)" PLBASE="$(PLBASE)" PLARCH="$(PLARCH)" \
	    PLLIBS="$(PLLIBS)" PLLDFLAGS="$(PLLDFLAGS)" \
	    PLINCL="$(PLINCL)" PLSHARED="$(PLSHARED)" \
	    PLSOEXT="$(SO)" BUILDDIR="$(BUILDDIR)" \
	    MAKE="$(MAKE)" \
	    ./configure $(CNFG) $(CNFGPASSED) --prefix=$(prefix)

all:	objects

objects::
	for p in $(PKG); do \
	    if [ -r $$p/Makefile ]; then ( cd $$p && $(MAKE) ); fi; \
        done

install::
	for p in $(PKG); do \
	    if [ -r $$p/Makefile ]; then ( cd $$p && $(MAKE) $@ ); fi; \
        done
	@echo "*** Forcing update of library index ***"
	rm -f $(PLLIB)/INDEX.pl
	$(PL) -f none -g "make_library_index('$(PLLIB)')" -t halt

rpm-install: html-install
	for p in $(PKG); do \
	    if [ -r $$p/Makefile ]; then ( cd $$p && $(MAKE) $@ ); fi; \
        done
	@echo "*** Forcing update of library index ***"
	rm -f $(PLLIB)/INDEX.pl
	$(PL) -f none -g "make_library_index('$(PLLIB)')" -t halt

pdf-install::
	for p in $(PKG); do \
	    if [ -r $$p/Makefile ]; then ( cd $$p && $(MAKE) $@ ); fi; \
        done

html-install::
	for p in $(PKG); do \
	    if [ -r $$p/Makefile ]; then ( cd $$p && $(MAKE) $@ ); fi; \
        done
	$(INSTALL_DATA) index.html $(PKGDOC)

configure::
	@echo "**********************"
	@echo "* Configuring packages $(PKG)"
	@echo "**********************"
	@for p in $(PKG); do \
	    if [ -r $$p/configure ]; then \
	        echo "**********************"; \
		echo "* Package $$p"; \
		echo "**********************"; \
	        ( cd $$p && $(CONFIG) ); \
	    fi; \
        done

distclean::
	for p in $(PKG); do \
	    if [ -r $$p/Makefile ]; then ( cd $$p && $(MAKE) $@ ); fi; \
        done
	rm -f Makefile configure

clean::
	for p in $(PKG); do \
	    if [ -r $$p/Makefile ]; then ( cd $$p && $(MAKE) $@ ); fi; \
        done

# test environment

printenv::
	printenv
