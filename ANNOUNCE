SWI-Prolog 5.3.8/XPCE 6.2.16 development snapshot

Status
======
  
  * Various users have reported their old programs to run fine on
    this development version.

  * Be careful on production systems.  Should be fine for running normal
    Prolog code for development.  Especially =/2, ==/2, @>/2, copy_term/2,
    recorda and friends have been modified significantly to deal with
    cyclic terms and attributed variables.
  
  * The implementation of global variables is new, but few problems are
    expected.

  * Expect problems with builtin predicates handling attributed variables.
    Three types of incorrect behaviour are to be expected: crash (normally
    on an assertion error), refusing to bind (the attvar is treated as a
    instantiated term) or refusing to wakeup the unification handler.
    
Please report all trouble you encounter.


Anticipated features relative to stable 5.2.x release and their status
======================================================================

  * Attributed variables
    Complete.

  * Corouting.
    Lacking call_residue/2.  Unclear whether this is feasible and
    whether or not we want that.

  * Global variables
    Complete.

  * Infinite terms (cyclic terms)
    Incomplete but useable.

    Supported: =/2, ==/2, @>/2 (and friends), copy_term/2, =../2,
               duplicate_term/2, ground/2, dif/2, when/2, term_variables/2,
	       numbervars/3.

    Unsupported: recorda/2 (and friends), write/1
		 (and friends, partial support), asserta/1 (and friends).

  * CHR constraint language support
    Complete.  Debugger is being integrated with the Prolog debugger.

  * Domain specific constraint libraries
    Only integer bounds constraint (a subset if CLP(fd)).
    If you have code available or want to develop,
    please contact me (jan@swi-prolog.org).  The aim is to support at
    least the popular solvers compatible to at least one other major
    implementation.


Brief summary of changes since 5.3.7
====================================

SWI-Prolog
----------

  * Fixed a number of issues around load_files/2 (the primitive below
    consult, use_module, etc).

  * Added exporting operators from modules.

Packages
--------

  * CHR: various improvements.  Loading files now uses term_expansion
    rather than creating a .pl file from a .chr file and CHR rules may
    be defined in files using any extension as long as they include
    library(chr).  The debugger is improved (added chr_leash/1) and
    (partly) integrated with the Prolog commandline debugger.

    Synchronised CHR debugging and optimization to the -O and -nodebug
    flags (optimise and generate_debug_info flags).

  * Clib: added library(prolog_server) to interact with Prolog using
    a TCP/IP connection via telnet.

Development environment
-----------------------

  * Make command history thread-aware
  * Some fixes to the debugger
  * Added prolog flag 'generate_debug_info' and option -nodebug


INCOMPATIBILITIES
=================

  (none)
